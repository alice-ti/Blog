import{_ as s,c as i,o as e,af as t}from"./chunks/framework.BivmJ8bT.js";const k=JSON.parse('{"title":"vue transition","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Vue/06-Transition.md","filePath":"docs/Vue/06-Transition.md","lastUpdated":1748592476000}'),n={name:"docs/Vue/06-Transition.md"};function l(o,a,r,c,h,d){return e(),i("div",null,a[0]||(a[0]=[t(`<h1 id="vue-transition" tabindex="-1">vue <a href="https://cn.vuejs.org/guide/built-ins/transition.html" target="_blank" rel="noreferrer">transition</a> <a class="header-anchor" href="#vue-transition" aria-label="Permalink to &quot;vue [transition](https://cn.vuejs.org/guide/built-ins/transition.html)&quot;">​</a></h1><h2 id="css-过渡-class" tabindex="-1">CSS 过渡 class <a class="header-anchor" href="#css-过渡-class" aria-label="Permalink to &quot;CSS 过渡 class&quot;">​</a></h2><p><img src="https://cn.vuejs.org/assets/transition-classes.DYG5-69l.png" alt="过渡图示"></p><ol><li><code>v-enter-from</code>：进入动画的起始状态。在元素插入之前添加，在元素插入完成后的下一帧移除。</li><li><code>v-enter-active</code>：进入动画的生效状态。应用于整个进入动画阶段。在元素被插入之前添加，在过渡或动画完成之后移除。这个 class 可以被用来定义进入动画的持续时间、延迟与速度曲线类型。</li><li><code>v-enter-to</code>：进入动画的结束状态。在元素插入完成后的下一帧被添加 (也就是 <code>v-enter-from</code> 被移除的同时)，在过渡或动画完成之后移除。</li><li><code>v-leave-from</code>：离开动画的起始状态。在离开过渡效果被触发时立即添加，在一帧后被移除。</li><li><code>v-leave-active</code>：离开动画的生效状态。应用于整个离开动画阶段。在离开过渡效果被触发时立即添加，在过渡或动画完成之后移除。这个 class 可以被用来定义离开动画的持续时间、延迟与速度曲线类型。</li><li><code>v-leave-to</code>：离开动画的结束状态。在一个离开动画被触发后的下一帧被添加 (也就是 <code>v-leave-from</code> 被移除的同时)，在过渡或动画完成之后移除。</li></ol><h2 id="配合animate-css使用" tabindex="-1">配合<a href="https://animate.style/" target="_blank" rel="noreferrer"><code>animate.css</code></a>使用 <a class="header-anchor" href="#配合animate-css使用" aria-label="Permalink to &quot;配合[\`animate.css\`](https://animate.style/)使用&quot;">​</a></h2><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">transition</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    leave-active-class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;animate__animated animate__zoomOut&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    enter-active-class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;animate__animated animate__zoomIn&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,6)]))}const u=s(n,[["render",l]]);export{k as __pageData,u as default};
