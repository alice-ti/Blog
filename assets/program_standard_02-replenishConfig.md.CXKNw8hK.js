import{_ as i,c as t,o as a,af as n}from"./chunks/framework.BivmJ8bT.js";const k=JSON.parse('{"title":"补充设置","description":"","frontmatter":{},"headers":[],"relativePath":"program/standard/02-replenishConfig.md","filePath":"program/standard/02-replenishConfig.md","lastUpdated":1748594539000}'),e={name:"program/standard/02-replenishConfig.md"};function l(p,s,r,o,h,g){return a(),t("div",null,s[0]||(s[0]=[n(`<h1 id="补充设置" tabindex="-1">补充设置 <a class="header-anchor" href="#补充设置" aria-label="Permalink to &quot;补充设置&quot;">​</a></h1><h2 id="eslint-plugin-simple-import-sort" tabindex="-1"><a href="https://www.npmjs.com/package/eslint-plugin-simple-import-sort" target="_blank" rel="noreferrer">eslint-plugin-simple-import-sort</a> <a class="header-anchor" href="#eslint-plugin-simple-import-sort" aria-label="Permalink to &quot;[eslint-plugin-simple-import-sort](https://www.npmjs.com/package/eslint-plugin-simple-import-sort)&quot;">​</a></h2><blockquote><p>一个 <strong>ESLint</strong> 插件，它用于自动对 <strong>JavaScript</strong> 或 <strong>TypeScript</strong> 中的 <strong>import</strong> 语句进行排序。这个插件使用简单的规则对 <strong>import</strong> 语句进行分类，将其分为以下几类：</p></blockquote><ul><li>从 <strong>npm</strong> 包中导入的模块</li><li>从本地文件夹中导入的模块</li><li>从文件夹的上级目录中导入的模块</li><li>从根目录中导入的模块</li></ul><p>按照这些规则，<strong>eslint-plugin-simple-import-sort</strong> 可以自动将 <strong>import</strong> 语句按照上述顺序进行排序，从而使代码更加整洁。</p><h3 id="在项目中安装-eslint-plugin-simple-import-sort" tabindex="-1">在项目中安装 <strong>eslint-plugin-simple-import-sort</strong> <a class="header-anchor" href="#在项目中安装-eslint-plugin-simple-import-sort" aria-label="Permalink to &quot;在项目中安装 **eslint-plugin-simple-import-sort**&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eslint-plugin-simple-import-sort</span></span></code></pre></div><h3 id="在项目的-eslint-配置文件中启用该插件" tabindex="-1">在项目的 <strong>ESLint</strong> 配置文件中启用该插件 <a class="header-anchor" href="#在项目的-eslint-配置文件中启用该插件" aria-label="Permalink to &quot;在项目的 **ESLint** 配置文件中启用该插件&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;plugins&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;simple-import-sort&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;rules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;simple-import-sort/sort&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,9)]))}const m=i(e,[["render",l]]);export{k as __pageData,m as default};
