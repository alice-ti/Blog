import{_ as t,c as a,o as r,af as i}from"./chunks/framework.Cj92BNWl.js";const h=JSON.parse('{"title":"Git subtree","description":"","frontmatter":{},"headers":[],"relativePath":"files/diary/git/Git subtree.md","filePath":"files/diary/git/Git subtree.md","lastUpdated":1738744669000}'),s={name:"files/diary/git/Git subtree.md"};function o(d,e,l,c,u,n){return r(),a("div",null,e[0]||(e[0]=[i('<h1 id="git-subtree" tabindex="-1">Git subtree <a class="header-anchor" href="#git-subtree" aria-label="Permalink to &quot;Git subtree&quot;">​</a></h1><h2 id="git-subtree的使用简介" tabindex="-1"><code>git subtree</code>的使用简介 <a class="header-anchor" href="#git-subtree的使用简介" aria-label="Permalink to &quot;`git subtree`的使用简介&quot;">​</a></h2><p><code>git subtree</code>是一个Git命令，用于在单个Git仓库中管理多个项目。它允许您将一个项目的子目录作为独立的Git仓库处理，同时仍然保持在主仓库中。这使得在不使用子模块的情况下，更容易地将多个项目组合在一个仓库中。</p><p>以下是<code>git subtree</code>的一些常见用法：</p><h3 id="添加子树" tabindex="-1">添加子树 <a class="header-anchor" href="#添加子树" aria-label="Permalink to &quot;添加子树&quot;">​</a></h3><p>要将一个远程仓库作为子树添加到当前仓库中，可以使用以下命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git subtree add --prefix=&lt;subtree-directory&gt; &lt;remote-url&gt; &lt;branch&gt; --squash</span></span></code></pre></div><p>其中，<code>&lt;subtree-directory&gt;</code>是子树在当前仓库中的目录，<code>&lt;remote-url&gt;</code>是远程仓库的URL，<code>&lt;branch&gt;</code>是要添加的远程分支, <code>--squash</code>选项用于将子树的历史压缩成一个提交。</p><h3 id="拉取子树的更新" tabindex="-1">拉取子树的更新 <a class="header-anchor" href="#拉取子树的更新" aria-label="Permalink to &quot;拉取子树的更新&quot;">​</a></h3><p>要从远程仓库拉取子树的更新，可以使用以下命令：</p><p><code>git subtree pull --prefix=&lt;subtree-directory&gt; &lt;remote-url&gt; &lt;branch&gt; --squash</code>这将从远程仓库的指定分支拉取更新，并将它们合并到子树目录中。</p><h3 id="推送子树的更改" tabindex="-1">推送子树的更改 <a class="header-anchor" href="#推送子树的更改" aria-label="Permalink to &quot;推送子树的更改&quot;">​</a></h3><p>要将子树的更改推送回远程仓库，可以使用以下命令：</p><p><code>git subtree push --prefix=&lt;subtree-directory&gt; &lt;remote-url&gt; &lt;branch&gt; --squash</code>这将把子树目录中的更改推送到远程仓库的指定分支。</p><h3 id="分割子树" tabindex="-1">分割子树 <a class="header-anchor" href="#分割子树" aria-label="Permalink to &quot;分割子树&quot;">​</a></h3><p>如果您想将子树分割为一个独立的仓库，可以使用以下命令：</p><p><code>git subtree split --prefix=&lt;subtree-directory&gt; --branch=&lt;new-branch&gt;</code>这将创建一个新的分支，其中只包含子树目录的历史记录。</p>',17)]))}const b=t(s,[["render",o]]);export{h as __pageData,b as default};
