import{_ as s,o as a,c as n,O as o}from"./chunks/framework.999b5480.js";const F=JSON.parse('{"title":"接口返回图片文件","description":"","frontmatter":{},"headers":[],"relativePath":"files/diary/axios/接口返回图片文件.md","filePath":"files/diary/axios/接口返回图片文件.md","lastUpdated":1684752912000}'),l={name:"files/diary/axios/接口返回图片文件.md"},p=o(`<h1 id="接口返回图片文件" tabindex="-1">接口返回图片文件 <a class="header-anchor" href="#接口返回图片文件" aria-label="Permalink to &quot;接口返回图片文件&quot;">​</a></h1><p>请求头设置</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">responseType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">arraybuffer</span><span style="color:#89DDFF;">&#39;</span></span></code></pre></div><p>页面中<code>base64</code>使用</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">api</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">// 图片文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> img </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">data:image/png;base64,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">btoa</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Uint8Array</span><span style="color:#A6ACCD;">(res)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reduce</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">byte</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> data </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> String</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromCharCode</span><span style="color:#A6ACCD;">(byte)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">))</span></span></code></pre></div>`,5),e=[p];function t(c,r,y,D,i,A){return a(),n("div",null,e)}const d=s(l,[["render",t]]);export{F as __pageData,d as default};
