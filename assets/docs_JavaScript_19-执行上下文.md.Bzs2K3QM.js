import{_ as r,c as o,o as s,af as n}from"./chunks/framework.BivmJ8bT.js";const d=JSON.parse('{"title":"执行上下文","description":"","frontmatter":{},"headers":[],"relativePath":"docs/JavaScript/19-执行上下文.md","filePath":"docs/JavaScript/19-执行上下文.md","lastUpdated":1748592476000}'),e={name:"docs/JavaScript/19-执行上下文.md"};function a(i,t,l,g,c,_){return s(),o("div",null,t[0]||(t[0]=[n('<h1 id="执行上下文" tabindex="-1">执行上下文 <a class="header-anchor" href="#执行上下文" aria-label="Permalink to &quot;执行上下文&quot;">​</a></h1><blockquote><p>执行上下文：指当前执行环境中的变量、函数声明，参数（arguments），作用域链，this等信息。</p><p>分为全局执行上下文、函数执行上下文，其区别在于全局执行上下文只有一个，函数执行上下文在每次调用函数时候会创建一个新的函数执行上下文</p></blockquote><ul><li>将全局上下文压入 <strong>ECS</strong></li><li>将 <strong>var</strong> 和 <strong>顶级函数声明</strong> 放入 全局对象(浏览器window)</li><li>将 顶级 <strong>let</strong> <strong>const</strong> <strong>class</strong> 声明放入 <strong>全局scope</strong></li><li><strong>全局scope</strong> 变量声明查重，如果在 <strong>全局对象</strong> 或者 scope 中有重复的声明就报错</li><li>为 <strong>var</strong> 声明变量赋值 <strong>undefined</strong></li><li>为 <strong>顶级函数声明</strong> 赋值 <strong>函数对象</strong> ，该对象内部会记录 <strong>当前上下文的</strong> Lexcial Environment</li><li>创建完成，开始执行代码</li></ul><hr><p><a href="https://juejin.cn/post/7166216368021307428" target="_blank" rel="noreferrer">执行上下文详解</a></p>',5)]))}const u=r(e,[["render",a]]);export{d as __pageData,u as default};
