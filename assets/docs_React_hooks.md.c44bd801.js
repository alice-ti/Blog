import{_ as s,c as e,o as a,e as n}from"./app.4cb35111.js";const D=JSON.parse('{"title":"Hooks","description":"","frontmatter":{},"headers":[{"level":2,"title":"react hooks","slug":"react-hooks","link":"#react-hooks","children":[{"level":3,"title":"useState & useReducer","slug":"usestate-usereducer","link":"#usestate-usereducer","children":[]},{"level":3,"title":"useEffect & useLayoutEffect","slug":"useeffect-uselayouteffect","link":"#useeffect-uselayouteffect","children":[]},{"level":3,"title":"useMemo & useCallback","slug":"usememo-usecallback","link":"#usememo-usecallback","children":[]},{"level":3,"title":"useContent","slug":"usecontent","link":"#usecontent","children":[]},{"level":3,"title":"useImmer","slug":"useimmer","link":"#useimmer","children":[]},{"level":3,"title":"useRef","slug":"useref","link":"#useref","children":[]}]},{"level":2,"title":"React-DOM","slug":"react-dom","link":"#react-dom","children":[{"level":3,"title":"flushSync","slug":"flushsync","link":"#flushsync","children":[]}]},{"level":2,"title":"router hooks","slug":"router-hooks","link":"#router-hooks","children":[]}],"relativePath":"docs/React/hooks.md"}'),l={name:"docs/React/hooks.md"},o=n(`<h1 id="hooks" tabindex="-1">Hooks <a class="header-anchor" href="#hooks" aria-hidden="true">#</a></h1><h2 id="react-hooks" tabindex="-1">react hooks <a class="header-anchor" href="#react-hooks" aria-hidden="true">#</a></h2><h3 id="usestate-usereducer" tabindex="-1">useState &amp; useReducer <a class="header-anchor" href="#usestate-usereducer" aria-hidden="true">#</a></h3><h3 id="useeffect-uselayouteffect" tabindex="-1">useEffect &amp; useLayoutEffect <a class="header-anchor" href="#useeffect-uselayouteffect" aria-hidden="true">#</a></h3><h4 id="useeffect-\u5B8C\u6574\u6307\u5357" tabindex="-1"><a href="./&#39;https://overreacted.io/zh-hans/a-complete-guide-to-useeffect/&#39;.html">useEffect \u5B8C\u6574\u6307\u5357</a> <a class="header-anchor" href="#useeffect-\u5B8C\u6574\u6307\u5357" aria-hidden="true">#</a></h4><h3 id="usememo-usecallback" tabindex="-1">useMemo &amp; useCallback <a class="header-anchor" href="#usememo-usecallback" aria-hidden="true">#</a></h3><h3 id="usecontent" tabindex="-1">useContent <a class="header-anchor" href="#usecontent" aria-hidden="true">#</a></h3><h3 id="useimmer" tabindex="-1">useImmer <a class="header-anchor" href="#useimmer" aria-hidden="true">#</a></h3><h3 id="useref" tabindex="-1">useRef <a class="header-anchor" href="#useref" aria-hidden="true">#</a></h3><p>\u8BBF\u95EE\u5176\u4ED6\u7EC4\u4EF6\u7684DOM\u8282\u70B9</p><ol><li><code>&lt;MyInput ref={inputRef} /&gt;</code> \u544A\u8BC9React\u5C06\u76F8\u5E94\u7684DOM\u8282\u70B9\u653E\u5165 <strong>inputRef.current</strong> \u3002\u8FD9\u901A\u5E38\u53D6\u51B3\u4E8E <strong>MyInput</strong> \u7EC4\u4EF6\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u5B83\u4E0D\u4F1A.</li><li><code>MyInput</code> \u7EC4\u4EF6\u4F7F\u7528 <strong>forwardRef</strong> \u58F0\u660E\u3002\u5B83\u63A5\u6536\u6765\u81EA <strong>prop</strong> \u7684 <strong>inputRef</strong> \u4F5C\u4E3A\u7B2C\u4E8C\u4E2A <strong>ref</strong> \u53C2\u6570.</li><li><code>MyInput</code> \u5C06\u5B83\u76F4\u63A5\u63A5\u6536\u5230\u7684 <strong>ref</strong> \u4F20\u9012\u7ED9\u5185\u90E8\u7684 <code>&lt;input&gt;</code></li></ol><div class="language-jsx"><button class="copy"></button><span class="lang">jsx</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">forwardRef</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useRef</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">react</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> MyInput </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">forwardRef</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">ref</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> {...</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">} </span><span style="color:#C792EA;">ref</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">ref</span><span style="color:#89DDFF;">} /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Form</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">inputRef</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">useRef</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">null</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">handleClick</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">inputRef</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">current</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">focus</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> (</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">MyInput</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">ref</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">inputRef</span><span style="color:#89DDFF;">} /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">onClick</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">handleClick</span><span style="color:#89DDFF;">}&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        Focus the input</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/&gt;</span></span>
<span class="line"><span style="color:#F07178;">  )</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="\u4F7F\u7528-useimperativehandle-\u9650\u5236\u516C\u5F00\u7684\u80FD\u529B" tabindex="-1">\u4F7F\u7528 <strong>useImperativeHandle</strong> \u9650\u5236\u516C\u5F00\u7684\u80FD\u529B <a class="header-anchor" href="#\u4F7F\u7528-useimperativehandle-\u9650\u5236\u516C\u5F00\u7684\u80FD\u529B" aria-hidden="true">#</a></h4><h2 id="react-dom" tabindex="-1">React-DOM <a class="header-anchor" href="#react-dom" aria-hidden="true">#</a></h2><h3 id="flushsync" tabindex="-1">flushSync <a class="header-anchor" href="#flushsync" aria-hidden="true">#</a></h3><h2 id="router-hooks" tabindex="-1">router hooks <a class="header-anchor" href="#router-hooks" aria-hidden="true">#</a></h2>`,16),t=[o];function p(r,c,i,u,y,h){return a(),e("div",null,t)}const d=s(l,[["render",p]]);export{D as __pageData,d as default};
