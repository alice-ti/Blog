import{_ as i,c as a,o as e,af as t}from"./chunks/framework.Cj92BNWl.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"files/docs/CSS/03-选择器.md","filePath":"files/docs/CSS/03-选择器.md","lastUpdated":1738744669000}'),n={name:"files/docs/CSS/03-选择器.md"};function h(r,s,l,p,k,o){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h1><h2 id="where" tabindex="-1">:where() <a class="header-anchor" href="#where" aria-label="Permalink to &quot;:where()&quot;">​</a></h2><p>**<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:where" target="_blank" rel="noreferrer">:where()</a>**CSS 伪类函数接受选择器列表作为它的参数，将会选择所有能被该选择器列表中任何一条规则选中的元素。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">footer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  cursor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pointer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>:where()</strong> 和 <strong>:is()</strong> 的不同之处在于，<strong>:where()</strong> 的优先级总是为 0，但是 <strong>:is()</strong> 的优先级是由它的选择器列表中优先级最高的选择器决定的。</p>`,5)]))}const c=i(n,[["render",h]]);export{E as __pageData,c as default};
