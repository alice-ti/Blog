import{_ as a,c as t,o as i,af as n}from"./chunks/framework.BivmJ8bT.js";const c=JSON.parse('{"title":"JSDoc 注释规范","description":"","frontmatter":{},"headers":[],"relativePath":"program/standard/jsdoc.md","filePath":"program/standard/jsdoc.md","lastUpdated":1748592476000}'),r={name:"program/standard/jsdoc.md"};function e(h,s,l,p,k,d){return i(),t("div",null,s[0]||(s[0]=[n(`<h1 id="jsdoc-注释规范" tabindex="-1">JSDoc 注释规范 <a class="header-anchor" href="#jsdoc-注释规范" aria-label="Permalink to &quot;JSDoc 注释规范&quot;">​</a></h1><blockquote><p><a href="https://www.jsdoc.com.cn/" target="_blank" rel="noreferrer">中文传送门入口</a><br><a href="https://jsdoc.app/" target="_blank" rel="noreferrer">英文传送门入口</a></p></blockquote><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@fileOverview</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 简单的方法标注示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> &lt;a href=&quot;#&quot;&gt;Alice-Ti&lt;/a&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0.1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 加法运算</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Num}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> num1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 加数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Num}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> num2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 被加数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Num}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> result 结果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">num1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">num2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> num1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> num2;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 减法运算</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Num}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> num1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 减数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Num}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> num2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 被减数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Num}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> result 结果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> minus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">num1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">num2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> num1 – num2;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 减法运算</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> options</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Num}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options.num1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">0]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Num}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options.num2]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Num}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> result 结果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> calculate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">num1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">num2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   return</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // do sth.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>将 <strong>描述注释</strong> 和 <strong>类型注释</strong> 分开</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@typedef</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ComplexObj</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@property</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 对象a</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@property</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a.b</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 对象a.b</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@property</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a.b.c</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 数字a.b.c</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@property</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 有一个对象y</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@property</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y.x</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 字符串</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@property</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string[]}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> z</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 字符串数组</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 复杂的对象</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {ComplexObj}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> complexObj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  a: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    b: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      c: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  z: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;r&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;y&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@fileOverview</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 简单的类对象标注示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> &lt;a href=&quot;#&quot;&gt;Alice-Ti&lt;/a&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0.1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@author</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Alice-Ti</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@constructor</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Person</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 一个Person类</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@see</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> The</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> &lt;a href=&quot;#&quot;&gt;Alice-Ti&lt;/a &gt;.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@example</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> new Parent(“张三”,15);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@since</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> version 1.0.0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {String}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> username</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 姓名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Num}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> age</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 年龄</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Person</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">age</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> {Sting} 姓名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@field</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> username;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> {Num} 年龄</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@field</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> age;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 弹出say内容</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {String}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> content</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 内容</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">say</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">” say :”</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">content);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@description</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 返回json格式的对象</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {String}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> json格式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@see</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Person#say</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getJson</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> “{name:”</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">”,age”+this.age+”}”;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="通过「注释生成文档」" tabindex="-1">通过「注释生成文档」 <a class="header-anchor" href="#通过「注释生成文档」" aria-label="Permalink to &quot;通过「注释生成文档」&quot;">​</a></h2><p>使用 <strong><a href="https://github.com/jdalton/docdown" target="_blank" rel="noreferrer">docdown</a></strong> 将注释转成 <strong>markdown</strong> 文件，然后用这些 <strong>markdown</strong> 文件生成 <strong>html</strong>.</p><h2 id="附录" tabindex="-1">附录 <a class="header-anchor" href="#附录" aria-label="Permalink to &quot;附录&quot;">​</a></h2><hr><table tabindex="0"><thead><tr><th>标签名</th><th>使用范围</th><th>说明</th></tr></thead><tbody><tr><td><a href="https://www.jsdoc.com.cn/tags-abstract" target="_blank" rel="noreferrer">@abstract</a></td><td>类</td><td>父类上定义抽象属性，由子类来实现</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-access" target="_blank" rel="noreferrer">@access</a></td><td>文档</td><td>@access &lt; @access &lt; package | private | protected | public &gt;</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-alias" target="_blank" rel="noreferrer">@alias</a></td><td>文档</td><td>标识A为B的昵称</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-author" target="_blank" rel="noreferrer">@author</a></td><td>文档</td><td>作者名</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-borrows" target="_blank" rel="noreferrer">@borrows</a></td><td>文档</td><td>复制另一个注释的所有信息</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-copyright" target="_blank" rel="noreferrer">@copyright</a></td><td>文档</td><td>版权信息</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-deprecated" target="_blank" rel="noreferrer">@deprecated</a></td><td>文档</td><td>标识已废弃</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-description" target="_blank" rel="noreferrer">@description</a></td><td>文档</td><td>描述。等同于注释最开始的描述，此标签优先级更高</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-example" target="_blank" rel="noreferrer">@example</a></td><td>文档</td><td>可以用文本，或者代码写一个示例</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-exports" target="_blank" rel="noreferrer">@exports</a></td><td>文档</td><td>在非ES Module的模块规范下，标识导出的内容</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-function" target="_blank" rel="noreferrer">@function</a></td><td>文档</td><td>标识一个函数</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-ignore" target="_blank" rel="noreferrer">@ignore</a></td><td>文档</td><td>标识某个对象、属性不在文档中展示</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-file" target="_blank" rel="noreferrer">@file</a></td><td>文档</td><td>一般用在文件开始，用来描述文件内容</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-enum" target="_blank" rel="noreferrer">@enum</a></td><td>文档</td><td>标识一个同类型集合</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-license" target="_blank" rel="noreferrer">@license</a></td><td>文档</td><td>软件许可证</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-package" target="_blank" rel="noreferrer">@package</a></td><td>文档</td><td>package-private。即标识某个属性仅同目录可用。仅标识在输出文档。</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-readonly" target="_blank" rel="noreferrer">@readonly</a></td><td>文档</td><td>标记一个只读属性</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-summary" target="_blank" rel="noreferrer">@summary</a></td><td>文档</td><td>@description 的简写版本</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-generator" target="_blank" rel="noreferrer">@generator</a></td><td>文档</td><td>标识一个生成器函数 (generator function)</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-see" target="_blank" rel="noreferrer">@see</a></td><td>文档</td><td>链接到某处</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-since" target="_blank" rel="noreferrer">@since</a></td><td>文档</td><td>从某个版本开始支持</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-tutorial" target="_blank" rel="noreferrer">@tutorial</a></td><td>文档</td><td>类似锚点，指向文档中定义的锚点</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-version" target="_blank" rel="noreferrer">@version</a></td><td>文档</td><td>标识版本</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-todo" target="_blank" rel="noreferrer">@todo</a></td><td>文档</td><td>记录一些待实现的功能，可以有多个</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-hideconstructor" target="_blank" rel="noreferrer">@hideconstructor</a></td><td>文档</td><td>在文档中隐藏类的构造器函数</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-constant" target="_blank" rel="noreferrer">@constant</a></td><td>常量</td><td>标识一个常量，会自动识别类型</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-default" target="_blank" rel="noreferrer">@default</a></td><td>值引用变量</td><td>为单个值引用变量在文档中生成默认值</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-lends" target="_blank" rel="noreferrer">@lends</a></td><td>对象字面量</td><td>标识一个对象字面量为一个类（使用某个函数生成类，对象字面量为其参数）</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-async" target="_blank" rel="noreferrer">@async</a></td><td>函数</td><td>标识函数为异步函数，默认情况下无需使用，会自动识别。</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-callback" target="_blank" rel="noreferrer">@callback</a></td><td>函数</td><td>标识一个回调函数，使用与@typedef 类似</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-class" target="_blank" rel="noreferrer">@class</a></td><td>函数</td><td>标识一个函数为类</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-classdesc" target="_blank" rel="noreferrer">@classdesc</a></td><td>函数</td><td>类的描述，与@class搭配使用</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-param" target="_blank" rel="noreferrer">@param</a></td><td>函数</td><td>函数入参</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-returns" target="_blank" rel="noreferrer">@returns</a></td><td>函数</td><td>函数的返回值标识</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-throws" target="_blank" rel="noreferrer">@throws</a></td><td>函数</td><td>标识一个函数可能抛出的错误类型，可以有多个</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-constructs" target="_blank" rel="noreferrer">@constructs</a></td><td>对象字面量</td><td>一般配合@lends使用，标识一个函数为类的constructor</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-augments" target="_blank" rel="noreferrer">@augments</a></td><td>类</td><td>标识当前类的父类，同@extends</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-event" target="_blank" rel="noreferrer">@event</a></td><td>类</td><td>标识一个类中的事件</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-fires" target="_blank" rel="noreferrer">@fires</a></td><td>类</td><td>标识在某个方法中会触发某个事件</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-inheritdoc" target="_blank" rel="noreferrer">@inheritdoc</a></td><td>类，文档</td><td>标识子类继承父类的文档</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-private" target="_blank" rel="noreferrer">@private</a></td><td>类</td><td>私有。与普通的属性不同，被标识的属性不会出现在输出文档中。</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-protected" target="_blank" rel="noreferrer">@protected</a></td><td>类</td><td>标识为仅本模块可用。</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-public" target="_blank" rel="noreferrer">@public</a></td><td>类</td><td>所有属性默认即为public。仅标识，如果需要标识范围，需使用@instance, @static, and @global</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-static" target="_blank" rel="noreferrer">@static</a></td><td>类</td><td>标识不会被实例化的类属性；或者模块中的某个属性。</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-global" target="_blank" rel="noreferrer">@global</a></td><td></td><td>标识一个属性为全局属性，如标识一个局部属性为全局属性</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-implements" target="_blank" rel="noreferrer">@implements</a></td><td></td><td>标识类实现了哪个接口</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-yields" target="_blank" rel="noreferrer">@yields</a></td><td></td><td>标识生成器函数的返回值</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-type" target="_blank" rel="noreferrer">@type</a></td><td></td><td>标识一个类型</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-external" target="_blank" rel="noreferrer">@external</a></td><td></td><td>标识一个外部的对象，或者库。比如定义$为jQuery</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-typedef" target="_blank" rel="noreferrer">@typedef</a></td><td></td><td>自定义类型。</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-variation" target="_blank" rel="noreferrer">@variation</a></td><td></td><td>如果出现了重名，例如命名空间和类，用此标识来区分</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-this" target="_blank" rel="noreferrer">@this</a></td><td></td><td>标识当前作用域中this的指向</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-requires" target="_blank" rel="noreferrer">@requires</a></td><td></td><td>标记当前模块依赖的模块，可以有多个</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-inner" target="_blank" rel="noreferrer">@inner</a></td><td></td><td>标记某属性为类、模块的内部属性</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-instance" target="_blank" rel="noreferrer">@instance</a></td><td></td><td>标识为当前实例专属属性</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-interface" target="_blank" rel="noreferrer">@interface</a></td><td></td><td>标识一个可被实现的接口，接口可以只有注释，没有实体</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-kind" target="_blank" rel="noreferrer">@kind</a></td><td></td><td>标识一个对象的类型</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-listens" target="_blank" rel="noreferrer">@listens</a></td><td></td><td>标识监听了某个事件</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-member" target="_blank" rel="noreferrer">@member</a></td><td></td><td>标识某个属性是对象的属性</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-memberof" target="_blank" rel="noreferrer">@memberof</a></td><td></td><td>标识某个属性属于某个对象</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-mixes" target="_blank" rel="noreferrer">@mixes</a></td><td></td><td>标识当前对象混入了另一个对象</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-mixin" target="_blank" rel="noreferrer">@mixin</a></td><td></td><td>标识一个混入对象</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-module" target="_blank" rel="noreferrer">@module</a></td><td></td><td>标记当前文件为一个模块</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-name" target="_blank" rel="noreferrer">@name</a></td><td></td><td>覆盖命名一个变量。最好用在不在当前代码中声明的变量，也就是虚拟注释</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-namespace" target="_blank" rel="noreferrer">@namespace</a></td><td></td><td>标识一个命名空间</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-override" target="_blank" rel="noreferrer">@override</a></td><td></td><td>子类覆盖父类的同名属性</td></tr><tr><td><a href="https://www.jsdoc.com.cn/tags-property" target="_blank" rel="noreferrer">@property</a></td><td></td><td>给对象的某个属性添加标识，配合@typedef使用，可生成任意自定义对象</td></tr><tr><td>@template</td><td></td><td>泛型</td></tr></tbody></table><hr><p><a href="https://blog.jim-nielsen.com/2023/types-in-jsdoc-with-zod/" target="_blank" rel="noreferrer">Types in JavaScript With Zod and JSDoc</a></p>`,14)]))}const o=a(r,[["render",e]]);export{c as __pageData,o as default};
