import{_ as t,o as e,c as o,O as l}from"./chunks/framework.999b5480.js";const f=JSON.parse('{"title":"DOM","description":"","frontmatter":{},"headers":[],"relativePath":"files/docs/JavaScript/11-DOM.md","filePath":"files/docs/JavaScript/11-DOM.md","lastUpdated":1708226832000}'),s={name:"files/docs/JavaScript/11-DOM.md"},n=l(`<h1 id="dom" tabindex="-1">DOM <a class="header-anchor" href="#dom" aria-label="Permalink to &quot;DOM&quot;">​</a></h1><h2 id="document" tabindex="-1">document <a class="header-anchor" href="#document" aria-label="Permalink to &quot;document&quot;">​</a></h2><h3 id="document-activeelement" tabindex="-1">document.activeElement <a class="header-anchor" href="#document-activeelement" aria-label="Permalink to &quot;document.activeElement&quot;">​</a></h3><blockquote><p>返回当前在 <strong>DOM</strong> 或者 <strong>shadow DOM</strong> 树中处于聚焦状态的 <strong>Element</strong></p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 判断输入框是否聚焦</span></span>
<span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#input</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">activeElement</span></span></code></pre></div><h2 id="scrollwidth、clientwidth、offsetwidth的区别" tabindex="-1">scrollWidth、clientWidth、offsetWidth的区别 <a class="header-anchor" href="#scrollwidth、clientwidth、offsetwidth的区别" aria-label="Permalink to &quot;scrollWidth、clientWidth、offsetWidth的区别&quot;">​</a></h2><ul><li>网页可见区域宽：document.body.clientWidth;</li><li>网页可见区域高：document.body.clientHeight;</li><li>网页可见区域高：document.body.offsetWeight:</li><li>网页可见区域高：document.body.offsetHeight;</li><li>网页正文全文宽：document.body.scrollWidth;</li><li>网页正文全文高：document.body.scrollHeight;</li><li>网页被卷去的高：document.body.scrollTop;</li><li>网页被卷去的左：document.body.scrollLeft;</li><li>网页正文部分上：window.screenTop;</li><li>网页正文部分左：window.screenLeft;</li><li>屏幕分辨率的高：window.screen.height;</li><li>屏幕分辨率的宽：window.screen.width;</li><li>屏幕可用工作区高度：window.screen.availHeight;</li><li>屏幕可用工作区宽度：window.screen.availWidth;</li></ul><blockquote><p><strong>scrollWidth</strong> 是对象的实际内容的宽，不包边线宽度，会随对象中内容的多少改变（内容多了可能会改变对象的实际宽度）<br><strong>clientWidth</strong> 是对象可见的宽度，不包滚动条等边线，会随窗口的显示大小改变。<br><strong>offsetWidth</strong> 是对象的可见宽度，包滚动条等边线，会随窗口的显示大小改变。</p></blockquote>`,8),a=[n];function i(c,d,r,p,h,m){return e(),o("div",null,a)}const _=t(s,[["render",i]]);export{f as __pageData,_ as default};
