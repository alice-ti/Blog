import{_ as t,c as r,o,af as a}from"./chunks/framework.BivmJ8bT.js";const R=JSON.parse('{"title":"Router","description":"","frontmatter":{},"headers":[],"relativePath":"docs/React/10-Router路由.md","filePath":"docs/React/10-Router路由.md","lastUpdated":1748592476000}'),i={name:"docs/React/10-Router路由.md"};function s(n,e,l,c,m,u){return o(),r("div",null,e[0]||(e[0]=[a('<h1 id="router" tabindex="-1">Router <a class="header-anchor" href="#router" aria-label="Permalink to &quot;Router&quot;">​</a></h1><h2 id="react-router" tabindex="-1">React Router <a class="header-anchor" href="#react-router" aria-label="Permalink to &quot;React Router&quot;">​</a></h2><h2 id="remix" tabindex="-1"><a href="https://remix.org.cn/docs/en/main/start/v2#file-system-route-convention" target="_blank" rel="noreferrer">Remix</a> <a class="header-anchor" href="#remix" aria-label="Permalink to &quot;[Remix](https://remix.org.cn/docs/en/main/start/v2#file-system-route-convention)&quot;">​</a></h2><p>Remix 是一个由 React Router 团队开发的全栈 Web 框架，它旨在提供一个更加一致和高效的方式来构建现代的、快速的、可靠的 Web 应用。</p><p>Remix 的核心特性如下：</p><ul><li><strong>速度和用户体验</strong>：Remix 追求速度和用户体验，支持服务端渲染（SSR）和静态站点生成（SSG） 。</li><li><strong>跨环境运行</strong>：基于 Web 基础技术，如 HTML/CSS、HTTP 和 Web Fetch API，Remix 可以在多种环境中运行，包括 Web Browser、Cloudflare Workers、Serverless 或 Node.js 等 。</li><li><strong>嵌套路由</strong>：Remix 内建了文件即路由、动态路由、嵌套路由、资源路由等，使得路由管理更加灵活 。</li><li><strong>预加载和并行数据获取</strong>：Remix 支持预加载页面资源，几乎可以立即加载页面，同时告别了瀑布式的数据获取方式，数据在服务端并行获取，生成完整的 HTML 文档 。</li><li><strong>自动代码拆分</strong>：Remix 使用自动代码拆分来提高应用程序的性能，只加载当前页面所需的代码 。</li><li><strong>静态导出和部署</strong>：Remix 支持静态导出，可以将应用程序导出为静态 HTML 文件，并部署到各种静态主机或 CDN 上，提供更快的加载速度和更好的缓存性能 。</li><li><strong>错误处理</strong>：Remix 内置了错误处理机制，包括针对非预期错误处理的 和开发者抛出错误处理的 。</li></ul>',6)]))}const _=t(i,[["render",s]]);export{R as __pageData,_ as default};
