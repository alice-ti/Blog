import{_ as r,c as e,o as t,af as p}from"./chunks/framework.Cj92BNWl.js";const u=JSON.parse('{"title":"monorepo 和 multirepo(polyrepo)","description":"","frontmatter":{},"headers":[],"relativePath":"files/diary/project/17-monorepo 和 multirepo.md","filePath":"files/diary/project/17-monorepo 和 multirepo.md","lastUpdated":1738744669000}'),a={name:"files/diary/project/17-monorepo 和 multirepo.md"};function n(l,o,s,i,m,c){return t(),e("div",null,o[0]||(o[0]=[p('<h1 id="monorepo-和-multirepo-polyrepo" tabindex="-1"><strong>monorepo</strong> 和 <strong>multirepo</strong>(<strong>polyrepo</strong>) <a class="header-anchor" href="#monorepo-和-multirepo-polyrepo" aria-label="Permalink to &quot;**monorepo** 和 **multirepo**(**polyrepo**)&quot;">​</a></h1><p>它们都是项目管理的一种方式</p><ul><li><strong>multirepo</strong>(<strong>polyrepo</strong>) 就是将不同的项目放在不同的 git 仓库维护。</li><li><strong>monorepo</strong> 将多个项目放在同一个 git 仓库中维护。</li></ul><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c459ddaa0e92462da8dcd356021ef95c~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp?" alt="crop-mark"></p><blockquote><p>PS：当你还在纠结要不要用monorepo时，那你一般是不需要的</p></blockquote><h2 id="使用-npm-workspace-来进行-monorepo-改造" tabindex="-1">使用 <strong>npm workspace</strong> 来进行 <strong>monorepo</strong> 改造 <a class="header-anchor" href="#使用-npm-workspace-来进行-monorepo-改造" aria-label="Permalink to &quot;使用 **npm workspace** 来进行 **monorepo** 改造&quot;">​</a></h2><hr><p><a href="https://webo.digital/blog/monorepo-vs-polyrepo-architecture/" target="_blank" rel="noreferrer">Monorepo Vs Polyrepo Architecture</a></p><h2 id="备注" tabindex="-1">备注 <a class="header-anchor" href="#备注" aria-label="Permalink to &quot;备注&quot;">​</a></h2><p>lerna 或者 changesets</p>',10)]))}const _=r(a,[["render",n]]);export{u as __pageData,_ as default};
