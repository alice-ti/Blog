import{_ as i,c as a,o as t,af as n}from"./chunks/framework.BivmJ8bT.js";const r=JSON.parse('{"title":"padding-block","description":"","frontmatter":{},"headers":[],"relativePath":"docs/CSS/25-padding-block.md","filePath":"docs/CSS/25-padding-block.md","lastUpdated":1748588477000}'),e={name:"docs/CSS/25-padding-block.md"};function p(l,s,d,o,k,h){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="padding-block" tabindex="-1">padding-block <a class="header-anchor" href="#padding-block" aria-label="Permalink to &quot;padding-block&quot;">​</a></h1><p><strong><code>padding-block</code></strong> 定义了元素的逻辑块首和块末内边距，并根据元素的书写模式、行内方向和文本朝向对应至实体内边距。</p><p>配合 <code>writing-mode</code> 可以改变元素的书写方式</p><blockquote><p><code>writing-mode</code> 属性指定<em>块流动方向</em>，即块级容器堆叠的方向，以及行内内容在块级容器中的流动方向。因此，它也确定块级内容的顺序。</p></blockquote><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">padding-block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 10px 20px;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">writing-mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">horizontal-tb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">padding-block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 20px 40px;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">writing-mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vertical-lr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">writing-mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vertical-rl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div>`,6)]))}const g=i(e,[["render",p]]);export{r as __pageData,g as default};
