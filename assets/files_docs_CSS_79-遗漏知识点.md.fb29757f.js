import{_ as s,c as a,o as l,e}from"./app.bee2b69e.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{"lastUpdated":false},"headers":[{"level":2,"title":"<template> 元素","slug":"template-元素","link":"#template-元素","children":[]},{"level":2,"title":"<picture> 标签","slug":"picture-标签","link":"#picture-标签","children":[]}],"relativePath":"files/docs/CSS/79-遗漏知识点.md","lastUpdated":1679898599000}'),n={name:"files/docs/CSS/79-遗漏知识点.md"},t=e(`<h2 id="template-元素" tabindex="-1"><code>&lt;template&gt;</code> 元素 <a class="header-anchor" href="#template-元素" aria-hidden="true">#</a></h2><blockquote><p>template 元素用于保存 HTML 模板，同时他里面的内容是不可见的。 声明后可通过 JS 访问里面的内容，复制或渲染.</p></blockquote><h2 id="picture-标签" tabindex="-1"><code>&lt;picture&gt;</code> 标签 <a class="header-anchor" href="#picture-标签" aria-hidden="true">#</a></h2><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">picture</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">source</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">srcset</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">large.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">media</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(min-width: 800px)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">source</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">srcset</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">medium.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">media</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(min-width: 500px)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">small.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">picture</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,4),p=[t];function o(c,r,D,F,i,y){return l(),a("div",null,p)}const _=s(n,[["render",o]]);export{u as __pageData,_ as default};
