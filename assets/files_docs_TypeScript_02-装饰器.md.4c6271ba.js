import{_ as e,o as a,c as r,O as t}from"./chunks/framework.999b5480.js";const b=JSON.parse('{"title":"装饰器","description":"","frontmatter":{},"headers":[],"relativePath":"files/docs/TypeScript/02-装饰器.md","filePath":"files/docs/TypeScript/02-装饰器.md","lastUpdated":1694613449000}'),o={name:"files/docs/TypeScript/02-装饰器.md"},s=t('<h1 id="装饰器" tabindex="-1">装饰器 <a class="header-anchor" href="#装饰器" aria-label="Permalink to &quot;装饰器&quot;">​</a></h1><p><em>装饰器</em>是一种特殊类型的声明，它能够被附加到<a href="https://www.tslang.cn/docs/handbook/decorators.html#class-decorators" target="_blank" rel="noreferrer">类声明</a>，<a href="https://www.tslang.cn/docs/handbook/decorators.html#method-decorators" target="_blank" rel="noreferrer">方法</a>， <a href="https://www.tslang.cn/docs/handbook/decorators.html#accessor-decorators" target="_blank" rel="noreferrer">访问符</a>，<a href="https://www.tslang.cn/docs/handbook/decorators.html#property-decorators" target="_blank" rel="noreferrer">属性</a>或<a href="https://www.tslang.cn/docs/handbook/decorators.html#parameter-decorators" target="_blank" rel="noreferrer">参数</a>上。 装饰器使用 <code>@expression</code>这种形式，<code>expression</code>求值后必须为一个函数，它会在运行时被调用，被装饰的声明信息做为参数传入。</p><h2 id="类声明" tabindex="-1">类声明 <a class="header-anchor" href="#类声明" aria-label="Permalink to &quot;类声明&quot;">​</a></h2><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><h2 id="访问符" tabindex="-1">访问符 <a class="header-anchor" href="#访问符" aria-label="Permalink to &quot;访问符&quot;">​</a></h2><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><hr><p><a href="https://www.tslang.cn/docs/handbook/decorators.html" target="_blank" rel="noreferrer">TS Docs</a></p><p><a href="https://juejin.cn/post/7006483808832716813" target="_blank" rel="noreferrer">TS系列篇｜装饰器(@)</a></p>',10),n=[s];function c(d,h,l,i,_,p){return a(),r("div",null,n)}const m=e(o,[["render",c]]);export{b as __pageData,m as default};
